{"version":3,"sources":["images/lounge43wall.png","images/lounge50wall.png","images/lounge55wall.png","images/lounge65wall.png","images/lounge75wall.png","images/lounge43stand.png","images/lounge50stand.png","images/lounge55stand.png","images/lounge65stand.png","images/lounge75stand.png","components/wrapper/wrapper.jsx","components/intro/intro.jsx","components/loungeimage/loungeimage.jsx","components/tvspec/tvspec.jsx","components/catbutton/catbutton.jsx","components/sizebutton/sizebutton.jsx","containers/Sizeguide/Sizeguide.jsx","serviceWorker.js","index.js"],"names":["module","exports","wrapper","children","className","intro","loungeimage","imgUrl","altText","src","alt","tvspec","category","size","width","height","depth","clicked","catbutton","label","activeCatButton","catButtonIndex","onClick","sizebutton","sizeButtonIndex","activeSizeButton","Tvsizeguide","state","selectedTv","id","tvSpec","categories","wallSizes","tvCategories","catUrl","WallTvData","StandTvData","WallTypes","Lounge43Wall","Lounge50Wall","Lounge55Wall","Lounge65Wall","Lounge75Wall","StandTypes","Lounge43Stand","Lounge50Stand","Lounge55Stand","Lounge65Stand","Lounge75Stand","standSizes","this","sizeButtonChangeHandler","setState","length","map","cat","index","key","to","activeCategory","catButtonChangeHandler","tv","path","exact","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8da03f72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lounge43wall.4684358a.png\";","module.exports = __webpack_public_path__ + \"static/media/lounge50wall.b45f4c39.png\";","module.exports = __webpack_public_path__ + \"static/media/lounge55wall.097c0265.png\";","module.exports = __webpack_public_path__ + \"static/media/lounge65wall.6fe9fa81.png\";","module.exports = __webpack_public_path__ + \"static/media/lounge75wall.bac82def.png\";","module.exports = __webpack_public_path__ + \"static/media/lounge43stand.9263822f.png\";","module.exports = __webpack_public_path__ + \"static/media/lounge50stand.aed25ff6.png\";","module.exports = __webpack_public_path__ + \"static/media/lounge55stand.ca5b6cb9.png\";","module.exports = __webpack_public_path__ + \"static/media/lounge65stand.1c9b0cc0.png\";","module.exports = __webpack_public_path__ + \"static/media/lounge75stand.cc2fd084.png\";","import React from 'react';\r\nimport './wrapper.css';\r\nconst wrapper = ({ children }) => {\r\n    return (\r\n        <div className=\"Wrapper\">\r\n            { children }\r\n        </div>\r\n    )\r\n}\r\nexport default wrapper;","import React from 'react';\r\nimport './intro.css';\r\nconst intro = () => {\r\n    return (\r\n        <div className=\"wrapperIntro\">\r\n            <h2>Choose the right size TV for your home</h2>\r\n            <p>With 55&Prime; and 65&Prime; screens now the standard, try out different TVs on our interactive sizing guide so that you can visualise them in your home.</p>\r\n        </div>\r\n    )\r\n}\r\nexport default intro;","import React from 'react';\r\nimport './loungeimage.css';\r\nimport PropTypes from 'prop-types';\r\nconst loungeimage = ({ imgUrl, altText }) => {\r\n    return (\r\n        <img\r\n            src={imgUrl}\r\n            className=\"loungeImage\"\r\n            alt={altText}\r\n        />\r\n    )\r\n}\r\nloungeimage.propTypes = {\r\n    imgUrl:PropTypes.string,\r\n    altText:PropTypes.string\r\n}\r\nexport default loungeimage;","import React from 'react';\r\nimport './tvspec.css';\r\nimport PropTypes from 'prop-types';\r\nconst tvspec = ({ category, size, width, height, depth, clicked }) => {\r\n    return (\r\n        <div className=\"TvSpecWrapper\">\r\n            <div className=\"SpecIntro\">\r\n                <p><em>Note: For reference the television cabinent is 180cm wide</em></p>\r\n                <p className=\"dimensions\"><span className=\"capitalise\">{category}</span> | Dimensions:</p>\r\n            </div>\r\n             <table className=\"SpecTable\">\r\n                <tbody>\r\n                    <tr className=\"specTr\">\r\n                        <th>Screen size:</th>\r\n                        <td>{size}cm</td>\r\n                    </tr>\r\n                    <tr className=\"specTr\">\r\n                        <th>Width:</th>\r\n                        <td>{width}cm</td>\r\n                    </tr>\r\n                    <tr className=\"specTr\">\r\n                        <th>Height:</th>\r\n                        <td>{height}cm</td>\r\n                    </tr>\r\n                    <tr className=\"specTr\">\r\n                        <th>Depth:</th>\r\n                        <td>{depth}cm</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\ntvspec.propTypes = {\r\n    size:PropTypes.string,\r\n    width:PropTypes.string,\r\n    height:PropTypes.string,\r\n    depth:PropTypes.string\r\n}\r\nexport default tvspec;","import React from 'react';\r\nimport './catbutton.css';\r\nimport PropTypes from 'prop-types';\r\nconst catbutton = ({ label, clicked, activeCatButton, catButtonIndex }) => {\r\n    return (\r\n        <div\r\n            className={\r\n                        `\r\n                            button ${activeCatButton === catButtonIndex && \"active\"}\r\n                        `\r\n            }\r\n            onClick={clicked}\r\n        >\r\n            <p className=\"capitalise\">{label}</p>\r\n        </div>\r\n    )\r\n}\r\ncatbutton.propTypes = {\r\n    label:PropTypes.string,\r\n    clicked:PropTypes.func\r\n};\r\nexport default catbutton;","import React from 'react';\r\nimport './sizebutton.css';\r\nimport PropTypes from 'prop-types';\r\nconst sizebutton = ({ label, clicked, sizeButtonIndex, activeSizeButton }) => {\r\n    return (\r\n        <div\r\n            className={\r\n                        `\r\n                            button ${activeSizeButton === sizeButtonIndex && \"active\"}\r\n                        `\r\n            }\r\n            onClick={clicked}\r\n        >\r\n            <p className=\"label\">TV Sizes:</p>\r\n            <p className=\"tvSize\">{label}&Prime;</p>\r\n        </div>\r\n    )\r\n}\r\nsizebutton.propTypes = {\r\n    label:PropTypes.string,\r\n    clicked:PropTypes.func\r\n};\r\nexport default sizebutton;","import React, { Component } from \"react\";\r\nimport \"../../styles/reset.css\";\r\nimport \"./Sizeguide.css\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport Route from \"react-router-dom/Route\";\r\nimport Wrapper from \"../../components/wrapper/wrapper\";\r\nimport Intro from \"../../components/intro/intro\";\r\nimport Loungeimage from \"../../components/loungeimage/loungeimage\";\r\nimport Tvspec from \"../../components/tvspec/tvspec\";\r\nimport Catbutton from \"../../components/catbutton/catbutton\";\r\nimport Sizebutton from \"../../components/sizebutton/sizebutton\";\r\nimport Lounge43Wall from \"../../images/lounge43wall.png\";\r\nimport Lounge50Wall from \"../../images/lounge50wall.png\";\r\nimport Lounge55Wall from \"../../images/lounge55wall.png\";\r\nimport Lounge65Wall from \"../../images/lounge65wall.png\";\r\nimport Lounge75Wall from \"../../images/lounge75wall.png\";\r\nimport Lounge43Stand from \"../../images/lounge43stand.png\";\r\nimport Lounge50Stand from \"../../images/lounge50stand.png\";\r\nimport Lounge55Stand from \"../../images/lounge55stand.png\";\r\nimport Lounge65Stand from \"../../images/lounge65stand.png\";\r\nimport Lounge75Stand from \"../../images/lounge75stand.png\";\r\n\r\nclass Tvsizeguide extends Component {\r\n  state = {\r\n    selectedTv: [\r\n      {\r\n        id: 0,\r\n        category: \"wall\",\r\n        size: \"43\",\r\n        width: \"97\",\r\n        height: \"56\",\r\n        depth: \"6\",\r\n      },\r\n    ],\r\n    activeCatButton: 0,\r\n    activeSizeButton: 0,\r\n    catButtonIndex: 0,\r\n    sizeButtonIndex: 0,\r\n  };\r\n\r\n  render() {\r\n    const tvCategories = [\r\n      { id: 0, category: \"wall\", catUrl: \"/\" },\r\n      { id: 1, category: \"stand\", catUrl: \"/stand\" },\r\n    ];\r\n\r\n    const WallTvData = [\r\n      {\r\n        id: 0,\r\n        category: \"wall\",\r\n        size: \"43\",\r\n        width: \"97\",\r\n        height: \"56\",\r\n        depth: \"6\",\r\n      },\r\n      {\r\n        id: 1,\r\n        category: \"wall\",\r\n        size: \"50\",\r\n        width: \"113\",\r\n        height: \"65\",\r\n        depth: \"6\",\r\n      },\r\n      {\r\n        id: 2,\r\n        category: \"wall\",\r\n        size: \"55\",\r\n        width: \"124\",\r\n        height: \"72\",\r\n        depth: \"6\",\r\n      },\r\n      {\r\n        id: 3,\r\n        category: \"wall\",\r\n        size: \"65\",\r\n        width: \"146\",\r\n        height: \"84\",\r\n        depth: \"6\",\r\n      },\r\n      {\r\n        id: 4,\r\n        category: \"wall\",\r\n        size: \"75\",\r\n        width: \"167\",\r\n        height: \"96\",\r\n        depth: \"6\",\r\n      },\r\n    ];\r\n    const StandTvData = [\r\n      {\r\n        id: 0,\r\n        category: \"stand\",\r\n        size: \"43\",\r\n        width: \"197\",\r\n        height: \"64\",\r\n        depth: \"35\",\r\n      },\r\n      {\r\n        id: 1,\r\n        category: \"stand\",\r\n        size: \"50\",\r\n        width: \"1113\",\r\n        height: \"74\",\r\n        depth: \"35\",\r\n      },\r\n      {\r\n        id: 2,\r\n        category: \"stand\",\r\n        size: \"55\",\r\n        width: \"124\",\r\n        height: \"80\",\r\n        depth: \"36\",\r\n      },\r\n      {\r\n        id: 3,\r\n        category: \"stand\",\r\n        size: \"65\",\r\n        width: \"146\",\r\n        height: \"92\",\r\n        depth: \"39\",\r\n      },\r\n      {\r\n        id: 4,\r\n        category: \"stand\",\r\n        size: \"75\",\r\n        width: \"167\",\r\n        height: \"105\",\r\n        depth: \"39\",\r\n      },\r\n    ];\r\n\r\n    const WallTypes = [\r\n      Lounge43Wall,\r\n      Lounge50Wall,\r\n      Lounge55Wall,\r\n      Lounge65Wall,\r\n      Lounge75Wall,\r\n    ];\r\n\r\n    const StandTypes = [\r\n      Lounge43Stand,\r\n      Lounge50Stand,\r\n      Lounge55Stand,\r\n      Lounge65Stand,\r\n      Lounge75Stand,\r\n    ];\r\n\r\n    let intro,\r\n      loungeimage,\r\n      tvSpec,\r\n      categories,\r\n      wallSizes,\r\n      standSizes = null;\r\n    let { activeCatButton } = this.state;\r\n    let { activeSizeButton } = this.state;\r\n    let [{ category, size, width, height, depth }] = this.state.selectedTv;\r\n\r\n    const catButtonChangeHandler = (catButtonIndex, category) => {\r\n\r\n      this.setState({\r\n        activeCatButton: catButtonIndex\r\n      });\r\n\r\n      let activeCategory = null;\r\n\r\n      catButtonIndex === 0 ? activeCategory = \"wall\" : activeCategory = \"stand\";\r\n\r\n      let sizeButtonIndex = this.state.sizeButtonIndex;\r\n\r\n            if(activeCategory === \"wall\") {\r\n              let { id, size, width, height, depth } = WallTvData[sizeButtonIndex];\r\n                this.setState({\r\n                  selectedTv: [\r\n                    {\r\n                      id: id,\r\n                      category: activeCategory,\r\n                      size: size,\r\n                      width: width,\r\n                      height: height,\r\n                      depth: depth\r\n                    },\r\n                  ]\r\n                })\r\n                  \r\n            } else if(category ===\"stand\") {\r\n\r\n              let { id, size, width, height, depth } = StandTvData[sizeButtonIndex];\r\n              this.setState({\r\n                selectedTv: [\r\n                  {\r\n                    id: id,\r\n                    category: activeCategory,\r\n                    size: size,\r\n                    width: width,\r\n                    height: height,\r\n                    depth: depth\r\n                  },\r\n                ]\r\n              })\r\n            };\r\n    };\r\n\r\n    const sizeButtonChangeHandler = (sizeButtonIndex, category) => {\r\n      this.setState({\r\n        activeSizeButton: sizeButtonIndex,\r\n      });\r\n\r\n      if (category === \"wall\") {\r\n        let { id, size, width, height, depth } = WallTvData[sizeButtonIndex];\r\n\r\n        this.setState({\r\n          selectedTv: [\r\n            {\r\n              id: id,\r\n              category: category,\r\n              size: size,\r\n              width: width,\r\n              height: height,\r\n              depth: depth,\r\n            },\r\n          ],\r\n          sizeButtonIndex: sizeButtonIndex,\r\n        });\r\n      } else if (category === \"stand\") {\r\n        let { id, category, size, width, height, depth } = StandTvData[\r\n          sizeButtonIndex\r\n        ];\r\n\r\n        this.setState({\r\n          selectedTv: [\r\n            {\r\n              id: id,\r\n              category: category,\r\n              size: size,\r\n              width: width,\r\n              height: height,\r\n              depth: depth,\r\n            },\r\n          ],\r\n          sizeButtonIndex: sizeButtonIndex,\r\n        });\r\n      }\r\n    };\r\n\r\n    if (tvCategories.length > 0) {\r\n      intro = <Intro />;\r\n\r\n      categories = (\r\n        <ul className=\"CategoryWrapper\">\r\n          {tvCategories.map((cat, index) => {\r\n            return (\r\n              <li key={cat.id}>\r\n                <Link to={`${cat.catUrl}`}>\r\n                  <Catbutton\r\n                    label={cat.category}\r\n                    activeCatButton={activeCatButton}\r\n                    catButtonIndex={index}\r\n                    clicked={() => catButtonChangeHandler(index, cat.category)}\r\n                  ></Catbutton>\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      );\r\n\r\n      wallSizes = (\r\n        <ul className=\"SizesWrapper\">\r\n          {WallTvData.map((tv, index) => {\r\n            return (\r\n              <li key={tv.id}>\r\n                <Sizebutton\r\n                  label={tv.size}\r\n                  activeSizeButton={activeSizeButton}\r\n                  sizeButtonIndex={index}\r\n                  clicked={() => sizeButtonChangeHandler(index, tv.category)}\r\n                ></Sizebutton>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      );\r\n\r\n      standSizes = (\r\n        <ul className=\"SizesWrapper\">\r\n          {StandTvData.map((tv, index) => {\r\n            return (\r\n              <li key={tv.id}>\r\n                <Sizebutton\r\n                  label={tv.size}\r\n                  activeSizeButton={activeSizeButton}\r\n                  sizeButtonIndex={index}\r\n                  clicked={() => sizeButtonChangeHandler(index, tv.category)}\r\n                ></Sizebutton>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      );\r\n\r\n      tvSpec = (\r\n        <Tvspec\r\n          category={category}\r\n          size={size}\r\n          width={width}\r\n          height={height}\r\n          depth={depth}\r\n        ></Tvspec>\r\n      );\r\n\r\n      loungeimage = (\r\n        <div className=\"LoungeWrapper\">\r\n          <Route path=\"/\" exact>\r\n            <Loungeimage\r\n              imgUrl={WallTypes[this.state.sizeButtonIndex]}\r\n              altText=\"Lounge Image with television\"\r\n            ></Loungeimage>\r\n            {wallSizes}\r\n            {tvSpec}\r\n          </Route>\r\n          <Route path=\"/stand\" exact>\r\n            <Loungeimage\r\n              imgUrl={StandTypes[this.state.sizeButtonIndex]}\r\n              altText=\"Lounge Image with television\"\r\n            ></Loungeimage>\r\n            {standSizes}\r\n            {tvSpec}\r\n          </Route>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Wrapper>\r\n        {intro}\r\n        <Router>\r\n          {loungeimage}\r\n          {categories}\r\n        </Router>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\nexport default Tvsizeguide;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sizeguide from './containers/Sizeguide/Sizeguide';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Sizeguide />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}